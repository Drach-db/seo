/**
 * Google Apps Script –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–π –ø–µ—Ä–µ—Å–±–æ—Ä–∫–∏ SEO —Å—Ç—Ä–∞–Ω–∏—Ü
 * –¢—Ä–∏–≥–≥–µ—Ä–∏—Ç GitHub Actions workflow —á–µ—Ä–µ–∑ repository_dispatch API
 */

// ============================================
// –ù–ê–°–¢–†–û–ô–ö–ò - –ó–ê–ü–û–õ–ù–ò–¢–ï –≠–¢–ò –ó–ù–ê–ß–ï–ù–ò–Ø
// ============================================

// –í–∞—à GitHub Personal Access Token (—Å –ø—Ä–∞–≤–∞–º–∏ repo)
// –°–æ–∑–¥–∞—Ç—å –º–æ–∂–Ω–æ –∑–¥–µ—Å—å: https://github.com/settings/tokens
const GITHUB_TOKEN = '–í–ê–®_GITHUB_TOKEN_–ó–î–ï–°–¨';

// –í–ª–∞–¥–µ–ª–µ—Ü —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è (–≤–∞—à GitHub username)
const REPO_OWNER = '–í–ê–®_GITHUB_USERNAME';

// –ù–∞–∑–≤–∞–Ω–∏–µ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è
const REPO_NAME = 'seo';

// ============================================
// –§–£–ù–ö–¶–ò–ò
// ============================================

/**
 * –°–æ–∑–¥–∞–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–µ –º–µ–Ω—é –ø—Ä–∏ –æ—Ç–∫—Ä—ã—Ç–∏–∏ —Ç–∞–±–ª–∏—Ü—ã
 */
function onOpen() {
  const ui = SpreadsheetApp.getUi();
  ui.createMenu('ü§ñ SEO Automation')
    .addItem('üîÑ –ü–µ—Ä–µ—Å–æ–±—Ä–∞—Ç—å —Å—Ç—Ä–∞–Ω–∏—Ü—ã', 'triggerRebuild')
    .addSeparator()
    .addItem('‚ÑπÔ∏è –°—Ç–∞—Ç—É—Å –ø–æ—Å–ª–µ–¥–Ω–µ–π —Å–±–æ—Ä–∫–∏', 'checkLastBuildStatus')
    .addToUi();
}

/**
 * –¢—Ä–∏–≥–≥–µ—Ä–∏—Ç –ø–µ—Ä–µ—Å–±–æ—Ä–∫—É —Å—Ç—Ä–∞–Ω–∏—Ü —á–µ—Ä–µ–∑ GitHub Actions
 */
function triggerRebuild() {
  const ui = SpreadsheetApp.getUi();

  // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –∑–∞–ø–æ–ª–Ω–µ–Ω –ª–∏ —Ç–æ–∫–µ–Ω
  if (GITHUB_TOKEN === '–í–ê–®_GITHUB_TOKEN_–ó–î–ï–°–¨') {
    ui.alert(
      '‚ùå –û—à–∏–±–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏',
      '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –Ω–∞—Å—Ç—Ä–æ–π—Ç–µ GITHUB_TOKEN –≤ —Å–∫—Ä–∏–ø—Ç–µ.\n\n' +
      '–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è:\n' +
      '1. –û—Ç–∫—Ä–æ–π—Ç–µ –†–∞—Å—à–∏—Ä–µ–Ω–∏—è ‚Üí Apps Script\n' +
      '2. –ù–∞–π–¥–∏—Ç–µ —Å—Ç—Ä–æ–∫—É: const GITHUB_TOKEN = ...\n' +
      '3. –í—Å—Ç–∞–≤—å—Ç–µ –≤–∞—à GitHub Personal Access Token\n' +
      '4. –°–æ—Ö—Ä–∞–Ω–∏—Ç–µ (Ctrl+S)',
      ui.ButtonSet.OK
    );
    return;
  }

  // –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –¥–µ–π—Å—Ç–≤–∏—è
  const response = ui.alert(
    'üîÑ –ü–µ—Ä–µ—Å–±–æ—Ä–∫–∞ —Å—Ç—Ä–∞–Ω–∏—Ü',
    '–ó–∞–ø—É—Å—Ç–∏—Ç—å –ø–µ—Ä–µ—Å–±–æ—Ä–∫—É –≤—Å–µ—Ö SEO —Å—Ç—Ä–∞–Ω–∏—Ü?\n\n' +
    '–≠—Ç–æ –¥–µ–π—Å—Ç–≤–∏–µ:\n' +
    '‚Ä¢ –ü—Ä–æ—á–∏—Ç–∞–µ—Ç –¥–∞–Ω–Ω—ã–µ –∏–∑ Google Sheets\n' +
    '‚Ä¢ –°–≥–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç React –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã\n' +
    '‚Ä¢ –°–æ–±–µ—Ä–µ—Ç —Å—Ç–∞—Ç–∏—á–µ—Å–∫–∏–µ HTML —Å—Ç—Ä–∞–Ω–∏—Ü—ã\n' +
    '‚Ä¢ –ó–∞–∫–æ–º–º–∏—Ç–∏—Ç –∏–∑–º–µ–Ω–µ–Ω–∏—è –≤ Git\n' +
    '‚Ä¢ –ó–∞–¥–µ–ø–ª–æ–∏—Ç –Ω–∞ CloudFlare Pages\n\n' +
    '–ü—Ä–æ—Ü–µ—Å—Å –∑–∞–π–º–µ—Ç 2-3 –º–∏–Ω—É—Ç—ã.',
    ui.ButtonSet.YES_NO
  );

  if (response !== ui.Button.YES) {
    return;
  }

  // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä –∑–∞–≥—Ä—É–∑–∫–∏
  ui.alert('‚è≥ –ó–∞–ø—É—Å–∫ —Å–±–æ—Ä–∫–∏...', '–û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å –≤ GitHub Actions...', ui.ButtonSet.OK);

  try {
    // GitHub API endpoint –¥–ª—è repository_dispatch
    const url = `https://api.github.com/repos/${REPO_OWNER}/${REPO_NAME}/dispatches`;

    // Payload –¥–ª—è —Ç—Ä–∏–≥–≥–µ—Ä–∞
    const payload = {
      event_type: 'rebuild-pages',
      client_payload: {
        triggered_by: 'google_sheets',
        triggered_at: new Date().toISOString(),
        user: Session.getActiveUser().getEmail()
      }
    };

    // –û–ø—Ü–∏–∏ –∑–∞–ø—Ä–æ—Å–∞
    const options = {
      method: 'post',
      headers: {
        'Authorization': `token ${GITHUB_TOKEN}`,
        'Accept': 'application/vnd.github.v3+json',
        'Content-Type': 'application/json'
      },
      payload: JSON.stringify(payload),
      muteHttpExceptions: true
    };

    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å
    const response = UrlFetchApp.fetch(url, options);
    const statusCode = response.getResponseCode();

    if (statusCode === 204) {
      // –£—Å–ø–µ—Ö (GitHub API –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç 204 No Content –ø—Ä–∏ —É—Å–ø–µ—à–Ω–æ–º dispatch)
      ui.alert(
        '‚úÖ –°–±–æ—Ä–∫–∞ –∑–∞–ø—É—â–µ–Ω–∞!',
        'GitHub Actions –Ω–∞—á–∞–ª –ø–µ—Ä–µ—Å–±–æ—Ä–∫—É —Å—Ç—Ä–∞–Ω–∏—Ü.\n\n' +
        '–ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Å—Ç–∞—Ç—É—Å –º–æ–∂–Ω–æ:\n' +
        `‚Ä¢ GitHub Actions: https://github.com/${REPO_OWNER}/${REPO_NAME}/actions\n` +
        '‚Ä¢ CloudFlare Pages: —á–µ—Ä–µ–∑ ~3-5 –º–∏–Ω—É—Ç\n\n' +
        '–í—ã –ø–æ–ª—É—á–∏—Ç–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ, –∫–æ–≥–¥–∞ —Å–±–æ—Ä–∫–∞ –∑–∞–≤–µ—Ä—à–∏—Ç—Å—è.',
        ui.ButtonSet.OK
      );

      // –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –ª–æ–≥ –≤ –æ—Ç–¥–µ–ª—å–Ω—ã–π –ª–∏—Å—Ç (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)
      logRebuildTrigger('success');

    } else {
      // –û—à–∏–±–∫–∞
      throw new Error(`GitHub API –≤–µ—Ä–Ω—É–ª –∫–æ–¥ ${statusCode}: ${response.getContentText()}`);
    }

  } catch (error) {
    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –æ—à–∏–±–∫—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
    ui.alert(
      '‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ —Å–±–æ—Ä–∫–∏',
      `–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–ø—É—Å—Ç–∏—Ç—å GitHub Actions:\n\n${error.message}\n\n` +
      '–ü—Ä–æ–≤–µ—Ä—å—Ç–µ:\n' +
      '1. –ü—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å GitHub Token\n' +
      '2. –ü—Ä–∞–≤–∞ —Ç–æ–∫–µ–Ω–∞ (–¥–æ–ª–∂–µ–Ω –∏–º–µ—Ç—å scope "repo")\n' +
      '3. –ù–∞–∑–≤–∞–Ω–∏—è —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è –∏ –≤–ª–∞–¥–µ–ª—å—Ü–∞\n' +
      '4. –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç—É',
      ui.ButtonSet.OK
    );

    // –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –æ—à–∏–±–∫—É –≤ –ª–æ–≥
    logRebuildTrigger('error', error.message);

    console.error('–û—à–∏–±–∫–∞ —Ç—Ä–∏–≥–≥–µ—Ä–∞ –ø–µ—Ä–µ—Å–±–æ—Ä–∫–∏:', error);
  }
}

/**
 * –ü—Ä–æ–≤–µ—Ä—è–µ—Ç —Å—Ç–∞—Ç—É—Å –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ workflow run
 */
function checkLastBuildStatus() {
  const ui = SpreadsheetApp.getUi();

  if (GITHUB_TOKEN === '–í–ê–®_GITHUB_TOKEN_–ó–î–ï–°–¨') {
    ui.alert('‚ùå –û—à–∏–±–∫–∞', '–ù–∞—Å—Ç—Ä–æ–π—Ç–µ GITHUB_TOKEN –≤ —Å–∫—Ä–∏–ø—Ç–µ.', ui.ButtonSet.OK);
    return;
  }

  try {
    // GitHub API endpoint –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è workflow runs
    const url = `https://api.github.com/repos/${REPO_OWNER}/${REPO_NAME}/actions/runs?per_page=1`;

    const options = {
      method: 'get',
      headers: {
        'Authorization': `token ${GITHUB_TOKEN}`,
        'Accept': 'application/vnd.github.v3+json'
      },
      muteHttpExceptions: true
    };

    const response = UrlFetchApp.fetch(url, options);
    const data = JSON.parse(response.getContentText());

    if (data.workflow_runs && data.workflow_runs.length > 0) {
      const lastRun = data.workflow_runs[0];
      const status = lastRun.status;
      const conclusion = lastRun.conclusion;
      const createdAt = new Date(lastRun.created_at).toLocaleString('ru-RU');

      let statusEmoji = '‚è≥';
      let statusText = '–í –ø—Ä–æ—Ü–µ—Å—Å–µ';

      if (status === 'completed') {
        if (conclusion === 'success') {
          statusEmoji = '‚úÖ';
          statusText = '–£—Å–ø–µ—à–Ω–æ –∑–∞–≤–µ—Ä—à–µ–Ω–∞';
        } else if (conclusion === 'failure') {
          statusEmoji = '‚ùå';
          statusText = '–ó–∞–≤–µ—Ä—à–µ–Ω–∞ —Å –æ—à–∏–±–∫–æ–π';
        } else {
          statusEmoji = '‚ö†Ô∏è';
          statusText = conclusion;
        }
      }

      ui.alert(
        `${statusEmoji} –°—Ç–∞—Ç—É—Å –ø–æ—Å–ª–µ–¥–Ω–µ–π —Å–±–æ—Ä–∫–∏`,
        `–°—Ç–∞—Ç—É—Å: ${statusText}\n` +
        `–í—Ä–µ–º—è –∑–∞–ø—É—Å–∫–∞: ${createdAt}\n` +
        `Workflow: ${lastRun.name}\n\n` +
        `–ü–æ–¥—Ä–æ–±–Ω–æ—Å—Ç–∏: ${lastRun.html_url}`,
        ui.ButtonSet.OK
      );
    } else {
      ui.alert('‚ÑπÔ∏è –°—Ç–∞—Ç—É—Å', '–ü–æ–∫–∞ –Ω–µ –±—ã–ª–æ –Ω–∏ –æ–¥–Ω–æ–π —Å–±–æ—Ä–∫–∏.', ui.ButtonSet.OK);
    }

  } catch (error) {
    ui.alert('‚ùå –û—à–∏–±–∫–∞', `–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Å—Ç–∞—Ç—É—Å:\n${error.message}`, ui.ButtonSet.OK);
    console.error('–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å—Ç–∞—Ç—É—Å–∞:', error);
  }
}

/**
 * –ó–∞–ø–∏—Å—ã–≤–∞–µ—Ç –ª–æ–≥ —Ç—Ä–∏–≥–≥–µ—Ä–∞ –ø–µ—Ä–µ—Å–±–æ—Ä–∫–∏ –≤ –æ—Ç–¥–µ–ª—å–Ω—ã–π –ª–∏—Å—Ç
 */
function logRebuildTrigger(status, errorMessage = '') {
  try {
    const spreadsheet = SpreadsheetApp.getActiveSpreadsheet();
    let logSheet = spreadsheet.getSheetByName('Rebuild Log');

    // –°–æ–∑–¥–∞–µ–º –ª–∏—Å—Ç, –µ—Å–ª–∏ –µ–≥–æ –Ω–µ—Ç
    if (!logSheet) {
      logSheet = spreadsheet.insertSheet('Rebuild Log');
      logSheet.appendRow(['Timestamp', 'User', 'Status', 'Error Message']);
      logSheet.getRange('A1:D1').setFontWeight('bold').setBackground('#4285f4').setFontColor('white');
    }

    // –î–æ–±–∞–≤–ª—è–µ–º –∑–∞–ø–∏—Å—å
    logSheet.appendRow([
      new Date().toLocaleString('ru-RU'),
      Session.getActiveUser().getEmail(),
      status,
      errorMessage
    ]);

    // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø–æ–¥–≥–æ–Ω—è–µ–º —à–∏—Ä–∏–Ω—É –∫–æ–ª–æ–Ω–æ–∫
    logSheet.autoResizeColumns(1, 4);

  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –∑–∞–ø–∏—Å–∏ –ª–æ–≥–∞:', error);
  }
}

/**
 * –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ GitHub API
 */
function testGitHubConnection() {
  const ui = SpreadsheetApp.getUi();

  if (GITHUB_TOKEN === '–í–ê–®_GITHUB_TOKEN_–ó–î–ï–°–¨') {
    ui.alert('‚ùå –û—à–∏–±–∫–∞', '–ù–∞—Å—Ç—Ä–æ–π—Ç–µ GITHUB_TOKEN –≤ —Å–∫—Ä–∏–ø—Ç–µ.', ui.ButtonSet.OK);
    return;
  }

  try {
    const url = `https://api.github.com/repos/${REPO_OWNER}/${REPO_NAME}`;

    const options = {
      method: 'get',
      headers: {
        'Authorization': `token ${GITHUB_TOKEN}`,
        'Accept': 'application/vnd.github.v3+json'
      },
      muteHttpExceptions: true
    };

    const response = UrlFetchApp.fetch(url, options);
    const statusCode = response.getResponseCode();

    if (statusCode === 200) {
      const data = JSON.parse(response.getContentText());
      ui.alert(
        '‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ',
        `–†–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π: ${data.full_name}\n` +
        `–û–ø–∏—Å–∞–Ω–∏–µ: ${data.description || '–ù–µ—Ç –æ–ø–∏—Å–∞–Ω–∏—è'}\n` +
        `URL: ${data.html_url}`,
        ui.ButtonSet.OK
      );
    } else {
      ui.alert('‚ùå –û—à–∏–±–∫–∞', `GitHub API –≤–µ—Ä–Ω—É–ª –∫–æ–¥ ${statusCode}`, ui.ButtonSet.OK);
    }

  } catch (error) {
    ui.alert('‚ùå –û—à–∏–±–∫–∞', `–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è:\n${error.message}`, ui.ButtonSet.OK);
  }
}
